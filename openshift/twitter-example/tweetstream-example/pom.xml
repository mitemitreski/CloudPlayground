<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.richfaces.examples.tweetstream</groupId>
	<artifactId>parent</artifactId>
	<packaging>pom</packaging>
	<name>tweetstream-demo</name>
	<version>1.0.0-SNAPSHOT</version>

	<parent>
		<groupId>org.jboss</groupId>
		<artifactId>jboss-parent</artifactId>
		<version>6</version>
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<jboss.domain>default</jboss.domain>

	</properties>

	<repositories>
		<!-- Several key Java EE APIs and RIs are missing from the Maven Central 
			Repository -->
		<!-- The goal is to eventually eliminate the reliance on the JBoss repository -->
		<repository>
			<id>jboss-public-repository-group</id>
			<name>JBoss Public Maven Repository Group</name>
			<url>https://repository.jboss.org/nexus/content/groups/public-jboss/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>sonatype-public-repository-group</id>
			<name>Public Maven Repository Group</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<layout>default</layout>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>never</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>maven2-repository.java.net</id>
			<name>Java.net Repository for Maven</name>
			<url>http://download.java.net/maven/2/</url>
			<layout>default</layout>
		</repository>
      		<repository>
         		<id>twitter4j.org</id>
         		<name>twitter4j.org Repository</name>
         		<url>http://twitter4j.org/maven2</url>
         		<releases>
            			<enabled>true</enabled>
         		</releases>
         		<snapshots>
            			<enabled>true</enabled>
         		</snapshots>
      		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>jboss-public-repository</id>
			<name>JBoss Repository</name>
			<url>https://repository.jboss.org/nexus/content/groups/public</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
	</pluginRepositories>
	<dependencyManagement>
		<dependencies>

			<!-- CDI (JSR-299) -->
			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>
			<!-- EJB -->
			<dependency>
				<groupId>org.jboss.ejb3</groupId>
				<artifactId>jboss-ejb3-api</artifactId>
				<scope>provided</scope>
				<version>3.1.0</version>
			</dependency>
			<!-- Common annotations (e.g., @PostConstruct, @PreDestroy, @Generated, 
				@Resource) -->
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>jsr250-api</artifactId>
				<scope>provided</scope>
				<version>1.0</version>
			</dependency>
			<!-- Bean Validation (JSR-303) -->
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<scope>provided</scope>
				<version>1.0.0.GA</version>
			</dependency>

			<!-- Bean Validation Implementation -->
			<!-- Provides portable constraints such as @NotEmpty, @Email and @Url -->
			<!-- Hibernate Validator is only the JSR-303 implementation at the moment, 
				so we can assume it's provided -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>4.2.0.Beta2</version>
				<scope>provided</scope>
			</dependency>
			<!-- JSF -->
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-api</artifactId>
				<scope>provided</scope>
				<version>2.0.2-FCS</version>
			</dependency>

			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>jsf-impl</artifactId>
				<scope>provided</scope>
				<version>2.0.2-FCS</version>
			</dependency>

			<!-- JPA <dependency> <groupId>javax.persistence</groupId> <artifactId>persistence-api</artifactId> 
				<scope>provided</scope> <version>1.0-rev-1</version> </dependency> -->

			<!-- JPA -->
			<dependency>
				<groupId>org.hibernate.javax.persistence</groupId>
				<artifactId>hibernate-jpa-2.0-api</artifactId>
				<scope>provided</scope>
				<version>1.0.1.Final</version>
			</dependency>


			<!-- Optional, but highly recommended. -->
			<dependency>
				<groupId>org.testng</groupId>
				<artifactId>testng</artifactId>
				<version>5.10</version>
				<scope>test</scope>
				<classifier>jdk15</classifier>
			</dependency>

			<!-- Needed on JBoss AS as EL is out of date -->
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>el-impl</artifactId>
				<scope>runtime</scope>
				<!-- FIXME this version should be in the Weld API BOM -->
				<version>2.1.2-b04</version>
				<exclusions>
					<exclusion>
						<groupId>javax.el</groupId>
						<artifactId>el-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-core</artifactId>
				<version>[2.2,)</version>
			</dependency>

			<dependency>
				<groupId>org.twitter4j</groupId>
				<artifactId>twitter4j-stream</artifactId>
				<version>[2.2,)</version>
			</dependency>

			<dependency>
				<groupId>org.atmosphere</groupId>
				<artifactId>atmosphere-runtime</artifactId>
				<version>0.8-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<scope>provided</scope>
				<version>2.5</version>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<scope>provided</scope>
				<version>2.2</version>
			</dependency>

			<dependency>
				<groupId>org.richfaces.ui</groupId>
				<artifactId>richfaces-components-ui</artifactId>
				<version>4.1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.richfaces.ui</groupId>
				<artifactId>richfaces-components-api</artifactId>
				<version>4.1.0-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>org.richfaces.core</groupId>
				<artifactId>richfaces-core-impl</artifactId>
				<version>4.1.0-SNAPSHOT</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-core</artifactId>
				<version>1.1.0.CR3</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.logging</groupId>
				<artifactId>jboss-logging</artifactId>
				<version>3.0.0.Beta4</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.seam.solder</groupId>
				<artifactId>seam-solder</artifactId>
				<version>3.0.0.Beta1</version>
			</dependency>

			<dependency>
				<groupId>org.infinispan</groupId>
				<artifactId>infinispan-core</artifactId>
				<version>5.0.0.BETA2</version>
			</dependency>

			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.3</version>
			</dependency>

			<dependency>
				<groupId>org.jboss.resteasy</groupId>
				<artifactId>resteasy-jaxrs</artifactId>
				<version>2.2.1.GA</version>
				<!-- filter out unwanted jars -->
				<exclusions>
					<exclusion>
						<groupId>commons-httpclient</groupId>
						<artifactId>commons-httpclient</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.xml.bind</groupId>
						<artifactId>jaxb-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.sun.xml.bind</groupId>
						<artifactId>jaxb-impl</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<!-- Compiler plugin enforces Java 1.6 compatiblity -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<!-- Eclipse plugin can force download of source and JavaDoc jars -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
					<!-- <downloadSources>true</downloadSources> <downloadJavadocs>true</downloadJavadocs> -->
				</configuration>
			</plugin>

			<!-- Configure the JBoss AS Maven deploy plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>jboss-maven-plugin</artifactId>
				<version>1.5.0</version>
				<configuration>
					<jbossHome>${jboss.home}</jbossHome>
					<serverName>${jboss.domain}</serverName>
					<fileNames>
						<fileName>${project.build.directory}/${project.build.finalName}.war</fileName>
					</fileNames>
				</configuration>
			</plugin>

			<!-- JBoss AS plugin to deploy war -->
			<plugin>
				<groupId>org.jboss.as.plugins</groupId>
				<artifactId>jboss-as-maven-plugin</artifactId>
				<version>7.0.0.Final</version>
			</plugin>
			<!-- Compiler plugin enforces Java 1.6 compatibility and activates annotation 
				processors -->
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.1</version>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<modules>
		<module>shared</module>
		<module>tweetstream</module>
	</modules>

	<profiles>
		<profile>
			<id>keynote</id>
			<modules>
				<module>shared</module>
				<module>jbw</module>
				<module>tweetstream</module>

			</modules>
		</profile>
		<profile>
			<!-- When built in OpenShift the 'openshift' profile will be used when 
				invoking mvn. -->
			<!-- Use this profile for any OpenShift specific customization your app 
				will need. -->
			<!-- By default that is to put the resulting archive into the 'deployments' 
				folder. -->
			<!-- http://maven.apache.org/guides/mini/guide-building-for-different-environments.html -->
			<id>openshift</id>
			<build>
				<finalName>tweetstream</finalName>
				<plugins>
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.1.1</version>
						<configuration>
							<outputDirectory>deployments</outputDirectory>
							<warName>ROOT</warName>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
